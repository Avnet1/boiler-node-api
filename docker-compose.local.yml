services:
  # API Service
  local_core_api:
    build:
      context: .
      dockerfile: ./docker/local/Dockerfile
    container_name: local_core_api
    restart: on-failure
    env_file:
      - .env
    ports:
      - '${APP_PORT}:${APP_PORT}'
    depends_on:
      - local_core_db
      - local_core_rabbitmq
      - local_core_redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - local_core_network
    logging:
      driver: 'json-file'
      options:
        max-size: '100m'
        max-file: '5'

  # NginX
  local_core_nginx:
    container_name: local_core_nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/local/nginx.conf:/etc/nginx/conf.d/default.conf
      - local_core_logs_nginx:/var/log/nginx
    depends_on:
      - local_core_api
    networks:
      - local_core_network

  # PostgreSQL Service
  local_core_db:
    image: postgres:15.12-alpine3.21
    container_name: local_core_db
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - local_core_db_data:/var/lib/postgresql/data
    networks:
      - local_core_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PASS}"]
      interval: 10s
      timeout: 5s
      retries: 3

  # RabbitMQ
  local_core_rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: local_core_rabbitmq
    restart: always
    ports:
      - '5677:${RABBITMQ_PORT}'
      - '15677:15672'
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - local_core_network

  # Redis
  local_core_redis:
    image: redis:latest
    container_name: local_core_redis
    restart: always
    env_file:
      - .env
    ports:
      - '6379:6379'
    command: ['redis-server', '--requirepass', '${REDIS_PASS}']
    networks:
      - local_core_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3


  local_core_grafana:
    container_name: local_core_grafana
    image: grafana/grafana-oss:latest
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - local_core_grafana_storage:/var/lib/grafana
    depends_on:
      - local_core_loki
    networks:
      - local_core_network

  # Loki
  local_core_loki:
    container_name: local_core_loki
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    volumes:
      - ./docker/local/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - local_core_network

  local_core_promtail:
    container_name: local_core_promtail
    image: grafana/promtail:2.9.0
    volumes:
      - ./docker/local/promtail-config.yml:/etc/promtail/promtail.yaml
      - /var/log:/var/log
      - local_core_logs_nginx:/var/log/nginx
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - local_core_network

volumes:
  local_core_logs_nginx:
  local_core_db_data:
  local_core_grafana_storage:

networks:
  local_core_network:
    name: local_core_network
    driver: bridge
